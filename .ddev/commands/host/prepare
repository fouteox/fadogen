#!/usr/bin/env bash
#ddev-generated
## Description: Prepare the production server
## Usage: prepare
## Example: "ddev prepare"

TMP_DIR=$(mktemp -d)

trap 'rm -rf "$TMP_DIR"' EXIT

docker pull fouteox/fadogen-php-tools:latest

if ! docker run --rm -it -v "$HOME"/.ssh:/root/.ssh:ro -v "$(pwd)":/app/work -v "$TMP_DIR":/app/work/server-config fouteox/fadogen-php-tools artisan server:prepare; then
    echo "Error running server:prepare"
    exit 1
fi

docker pull serversideup/github-cli:alpine

if ! docker run --rm -it \
    -v "$HOME/.ssh:/ssh:ro" \
    -v "$HOME/.ssh/known_hosts:/ssh/known_hosts:rw" \
    -v "$(pwd):/app" \
    -v "$TMP_DIR:/app/server-config" \
    -v "$HOME/.config/gh:/config/gh:rw" \
    -e "PUID=$(id -u)" \
    -e "PGID=$(id -g)" \
    -e "RUN_AS_USER=$USER" \
    serversideup/github-cli:alpine \
    /bin/sh -c "if [ ! -d .git ]; then echo 'Error: Current directory is not a Git repository'; exit 1; fi && gh auth login && (gh repo view &>/dev/null || gh repo create --source=. --push --private) && gh secret set SSH_KNOWN_HOSTS < server-config/.env.SSH_KNOWN_HOSTS && gh secret set SSH_PRIVATE_KEY < server-config/.env.SSH_PRIVATE_KEY && gh secret set SSH_REMOTE_HOSTNAME < server-config/.env.SSH_REMOTE_HOSTNAME && gh secret set SSH_USER < server-config/.env.SSH_USER && gh variable set SYSTEM_ARCH < server-config/.env.SSH_ARCH && gh secret set SSH_UID < server-config/.env.SSH_UID && gh secret set SSH_GID < server-config/.env.SSH_GID && base64 .env.production | gh secret set ENV_FILE_BASE64"; then
    echo "Error configuring GitHub secrets and variables"
    exit 1
fi

docker pull fouteox/fadogen-ansible-tools:latest

if ! docker run --rm -it \
    -v "$HOME/.ssh:/ssh:ro" \
    -v "$TMP_DIR/config.yml:/ansible/config.yml" \
    -e PUID="$(id -u)" \
    -e PGID="$(id -g)" \
    -e RUN_AS_USER="$USER" \
    -e ANSIBLE_HOST_KEY_CHECKING=False \
    fouteox/fadogen-ansible-tools; then
    echo "Error running ansible-playbook"
    exit 1
fi